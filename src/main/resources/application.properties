spring.application.name=vanda_hydrometry_event_consumer

#Logging
logging.level.root=WARN
logging.level.dk.dataforsyningen.vanda_hydrometry_event_consumer=INFO
logging.file.name=vandah-eventhub.log
logging.pattern.console=

# Data source configuration
#spring.datasource.url=jdbc:postgresql:<database>
#spring.datasource.username=<username>
#spring.datasource.password=<password>
#spring.datasource.driver-class-name=org.postgresql.Driver


# Kafka client configuration for event hub connection
# Can be available in the form:
# 	Endpoint=sb://<NAMESPACE>.servicebus.windows.net/;SharedAccessKeyName=<KEY_NAME>;SharedAccessKey=<KEY>;EntityPath=<EVENT_HUB_NAME>
spring.kafka.bootstrap-servers=<NAMESPACE>.servicebus.windows.net:9093

# authetication
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
    username="$ConnectionString" \
    password="Endpoint=sb://<NAMESPACE>.servicebus.windows.net/;SharedAccessKeyName=<KEY_NAME>;SharedAccessKey=<KEY>;EntityPath=<EVENT_HUB_NAME>";

# topic, group and offset config
spring.kafka.topic=<EVENT_HUB_NAME>
spring.kafka.consumer.group-id=<GROUP_ID ex app name>
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.max-poll-records=100

# acknowledgement configuration
# when enable-auto-commit=false the "Acknowledgment ack" argument is available inside the listener
spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE



